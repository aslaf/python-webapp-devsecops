name: Python CI - DevSecOps Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '0 2 * * *'  # Every day at 2 AM UTC

jobs:

  dev:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: dev
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install test dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest
    - name: Run tests with pytest
      run: pytest

  security:
    name: Security Scans (Bandit & pip-audit)
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install security tools
      run: |
        pip install -r requirements.txt
        pip install bandit pip-audit
    - name: Run Bandit (Python code security scan)
      run: bandit -r .
    - name: Run pip-audit (Dependency vulnerability scan)
      run: pip-audit || true  # Don't fail the build if vulnerabilities are found

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: security
    steps:
    - uses: actions/checkout@v3
    - name: Build Docker image
      run: docker build -t aslaf/my-python-app:latest .

  docker-scan:
    name: Scan Docker Image
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Scan with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: aslaf/my-python-app:latest
        format: table
        ignore-unfixed: true
        vuln-type: os,library
        severity: CRITICAL,HIGH

  docker-push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: docker-scan
    steps:
    - uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push image to Docker Hub
      run: docker push aslaf/my-python-app:latest